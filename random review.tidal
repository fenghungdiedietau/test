--0204
bps(120/120)

d1
  $ slow 5
  $ jux (|+| speed "[1,0.5 1]")
  -- $ off 0.5 ((|*|gain (fast 2.6 (sine1*0.2 + 0.5))).(loopAt "[[0.35 0.2][0.35 0.24][0.35 0.2],0.3(2,7)]"))
  $ every 2 (within (0,0.25)$ off 0.25  (0.33 <~))
  -- $ every 1 (within (0,0.1) $ off 0 ((0.1<~).(|*| gain 1).(|+|speed 1)))
  -- $ every 2 (within (0,0.3) (fast 1.2).(0.25<~))
  -- $ off 0.125 (((choose [0.66,0,0,0.33]) <~ ).(|*| gain 1).(|+|speed "1").(density 2))
  -- $ every 4 (rev)
  $ stack [
  striate "2"
  $ sound (samples "{like1*3 like2*3 like3*3 [like4*3 ~] ~ }%6" $ fast (choose [2,5]) (run "3 4")) |+| pan"0"
  |+| gain 0.8,
  striate "3"
  $ sound (samples "[[like1*2] like2*2 like3*2 like4*3 ]%3" $ fast (choose [4]) (run "8"))
  |+| pan "1" |+|gain 0.9
  ]
  # cut (fast 2 (choose [0,1]))
  # cut "0"
  -- # release 0.2
  # release "[0.5 0.3 0.4 0.8]/17"

hush

d1
  $ slow 8 $ every 4 (rev)
  $ jux (|+| speed "[2,3]")
  $ spread striate "[4 3 2, 6]"
  $ sound (samples "stab*4 sn" $ run 8)


--1/09
--
bps 1

d1
  $ striateL' "<3 3 4 5 6 7 8>" "<0.3 0.3 0.4 0.5 0.6 0.7 0.8>" "<3 3 4 5 6 7 8>"
  $ n (iter 7 $ run 7) # sound "hk"
  #gain "1"
  # cut"1"
  -- # speed "<0.3 0.3 0.4 0.5 0.6 0.7 0.8>"

hush



3 3 4 5 6 7 8
3 4 5 6 7 8 3
4 5 6 7 8 3 3
5 6 7 8 3 3 4
6 7 8 3 3 4 5
7 8 3 3 4 5 6
8 3 3 4 5 6 7

d3
  -- $ within ((6/7),1) (off (1) (stut (iter 7 "<3 3 4 5 6 7 8>") (1/7) 0.5 ))
  -- $ within ((5/7),(6/7)) (off (1) (|+| speed "1").(|+| pan"1 0 1"))
  -- $ within ((4/7),(5/7)) (off (1) (|+| speed "1").(|+| pan"0"))
  -- $ within ((3/7),(4/7)) (off (1) (|+| speed "0.02").(|+| pan"0.5"))
  -- $ within ((2/7),(3/7)) (off (1) (|+| speed "0.02").(|+| pan"0.5"))
  -- $ within ((0/7),(1/7)) (off (1) (# speed "1").(|+| pan"1"))
  -- $ within ((0/7),(1/7)) (off (1) (stut 12 0.1 0.3).(|+| speed "1").(|+| pan"<0 1>"))
  -- $ within ((2/7),(3/7)) (off (1) (stut 10 0.1 0.3))
  -- $ within ((2/7),(3/7)) (off (1) (stut 5 0.1 0.1))
  $ within ((0/7),(1/7)) (off (1) (stut 25 (1/7) 0.3).(|+| speed "1").(|+| pan"<0 1>"))
  $ within ((2/7),(3/7)) (off (iter 7 "<1 2 3 4 5 6 7>") (stut 20 (1/7) 0.3))
  -- $ within ((4/7),(6/7)) (|+| speed "<0.4 0.5 0.6>")
  -- $ within ((5/7),(6/7)) (#speed (slow 4 $ scale 0.8 1.4 sine1 ))  --
  -- $ striateL' "<3 3 4 5 6 7 8>" "<0.3 0.3 0.4 0.5 0.6 0.7 0.8>" "<3 3 4 5 6 7 8>"
  $ n (iter 7 $ run 7) # sound "[<[bassdm*3 ~ [bass4 [hk ~ [~ bd] hk]]] [~ bass1]>,hk]"
  -- $ n (iter 7 $ run 7) # sound "[hk ~ ~,hk]"
  -- # sustain (slow 4 $ sine1 + 1 - (slow 6 $ saw1) )
  -- # begin (slow 4 $ sine1 + 1 - (slow 6 $ saw1) )
  -- # cut "0"

  -- #cut 1

hush

--1/12 amen break
  |1 + 2 + 3 + 4 + |1 + 2 + 3 + 4 + |1 + 2 + 3 + 4 + |1 + 2 + 3 + 4 + |
C |----------------|----------------|----------------|----------X-----|
R |x-x-x-x-x-x-x-x-|x-x-x-x-x-x-x-x-|x-x-x-x-x-X-x-x-|x-x-x-x-x---x-x-|
B |o-o-------oo----|o-o-------oo----|o-o-------o-----|--oo------o-----|

  a    b   c   b    a   b   c   b    a   b   c   -c   c   b   c   -c
S |----o--o-o--o--o|----o--o-o--o--o|----o--o-o----o-|-o--o--o-o----o-|
   A A B C          A A B C          A A B C                           ==>X
           C A B C          C A B C                   C A B C          ==>Y
                                             C A A B           C A A B ==>Z   X Y X Y X Z Y Z

S A:[~ ~] B:[sn ~] C:[~ sn]
  X: ---- o--o  ab
  Y: -o-- o--o  cb
  Z: -o-- --o-  cd




bps(120/120)

let a="[hh*8,[bd ~]*2 ~ [~ bd*2] ~ , ~ [sn ~ ~ sn][~ sn ~ ~ ][sn ~ ~ sn]]"
    b="[hh!!!! hh:7 hh!,[bd ~]*2 ~ [~ [bd ~]] ~ , ~ [sn ~ ~ sn][~ sn ~ ~ ][~ ~ sn ~]]"
    c="[hh!!!! hh:14 hh!,[~ bd*2] ~ [~ [bd ~]] ~ , [~ sn ~ ~ ][ sn ~ ~ sn ][~ sn ~ ~][~ ~ sn ~]]"


d2 $ sound "[cp lkdr]  lkdr:2 lkdr:2 lkdr:2"
    #cut 3

d2 silence

hush

bps 0.8

d1
  -- $ whenmod 8 7 (rev)
  $ every 3 (within (0,0.25) $ jux (stut' 7 (1/5) (# speed "{2 3 1.5}%2")).
                                   (slow "[1.5 2.5 3.5 4.5 5.5 6.5 7.5]/10").
                                   (|+|pan (slow 10 $ sine1)))
  -- $ every 3 (within (0.5,0.75) (stut' 4 (1/3) (jux (# begin "0.2"))).(slow "<2 3>"))
  $ every 5 (within (0.25,0.5) $ jux (stut' 2 (1/3) (# begin "0.5 0.5 0.75")).(slow "<4 5 2>"))
  -- $ whenmod 5 2 ((#nudge "[0.5 0.63]*2 0.5 [0 0.25*2] 0.75 ").(#sustain "[0.5 0.7]*2 0.2 [0.2 0.25*2] 0.2"))
  -- $interlace(
   -- $ sound ( preplace (1,1)
   -- "[[x!!!! x [x!]!],[x ~]*2 ~ [~ x*2] ~ , ~ [x ~ ~ x][~ x ~ ~ ][~ ~ x ~]]"  "[[[lkcd lkhu][lkcd ~]]/2 [[lkhu ~ ]/2 lkcd],lkdr]")
   $ sound ( preplace (1,1)
   "[[x!!!! x x!],[x ~]*2 ~ [~ x*2] ~ , ~ [x ~ ~ x][~ x ~ ~ ][~ ~ x ~]]"  "[[lkcd ~] [lkcd]],lkdr]")
   |+| cutoff (slow 5 $ sine1*2000 +5000)
   |+| pan  (slow 6 $ sine1*0.5)
  -- # sustain "[1 2 0.75 1]/5"
   -- # n (slow 4 $ "[0!!!! ~ [2 3 4]]")
   -- # begin (slow 5 $sine1*1 - 0.5)
  -- (slow 2 "[0.6 0.8 0.7 0.6 0.5 0.2 0.3]*3")
  -- # cut 1
  -- #unit "s"

  hush


bps 1
--dna 0115

d1 $ slow 4 $ striate' 128 (1/16) $ sound "dna"
   # cut 1


  d2
    -- $every 1 (0.1 <~)
      $sound "[cp bd bd bd]"


d2 silence

bps (120/120)

d1
  $every 1 (0.9 <~)
-- $ juxBy 0.6 (slow "1").(# cut "[1(4,6),0]")
-- $ striate' 32 (1/32)
-- $ loopAt 8
-- $ every 2 (0.25 <~).(iter 8)
$ slow 4
$ striate 256
-- "[0.1 0.2 0.5 0.08]/10"
$ sound "dna"
-- $ sound ( preplace (1,1)
-- "[[x!!!! x x!],[x ~]*2 ~ [~ x*2] ~ , ~ [x ~ ~ x][~ x ~ ~ ][~ ~ x ~]]"  "[dna]")
-- |+| speed "[1,<-2 -2.2 -2.4 -2.6 -2.8>]"
-- # orbit "0.1"

d1 $ density 1 $ jux (rev . every 2 ((26/8) <~))
-- $ spread' (striate' 8) (((+0.04) . (*0.04)) <$> slow 4 sine1)
$ slow 4
$ striate 256
$ sound "dna"

hush

d1 $ weave' 8 ((slow 6 $ striate' 180 (1/16) $ sound "dna") |+| pan (slow 4 $ sine1 + 0.2))
         [jux (every 3 (slow 3).((stut' 6 0.5)(vowel "a e i o u" |+|).(|+|begin"0.5"))),
          -- (vowel "i e p u" |+|),
          juxBy 0.7 (every 4 (stut' 4 0.5 (|*|speed (slow 2 $ sine1*0.8 ))))
          -- juxBy 0.5 (within(0.25,0.5) (stut' 2 0.6 (|+| pan "0 1")))
         ]
         |+| cutoff (slow 5 $ sine1*2000 +4000)
   # cut "1"
   #begin "[[[[<0.4 0.3> 0.33] 1]]/3]"
   -- # unit "[[c s] r*2]"

d1 $ stack [slow 4 $ every 2 (rev) $ slow 32 $ striate 256 $ sound "[dna]*6"
           |+| pan "1"
           ,
           slow 2 $ every 2 (rev) $ slow 32 $ striate 256 $ sound "[dna]*4"
           |+| pan "0"
           ]




hush


-- # speed "1"

d2
   -- $ slow "{[50 4]*2 10 [10 50*2] 1 }*6, [1 [90 10 1 100][1 100 1 1 ][10 10 100 10]]*4"
   $ striate' 4 "0.2 0.5 0.8 0.1"
   -- $ iter 16
   $ sound ( preplace (1,1)
   "[[x!!!! x x!],[x ~]*2 ~ [~ x*2] ~ , ~ [x ~ ~ x][~ x ~ ~ ][~ ~ x ~]]"  "dna")
   |+| cutoff (slow 5 $ sine1*2000 +4000)
   # cut 1
   # begin "0.2"  #unit "s"

--1/17
d1
  -- $ slowspread (slow) [64,36,24,30]
   -- $ jux (|+| speed (scale 0.3 1.2 $ density 2 sine1))
  $ loopAt 4
  $ (spread (striate' 200) [(1/24), (1/30), (1/20), (1/20) , (1/20)] $ sound "dna" )
   -- |+| speed (scale 0.2 1 $ density 2 sine)
  # cut "0"

hush


hush
