cps 0.8

d2
  $ sometimes ((swingBy (3/2) 12).(degradeBy 0))
  $ s (iter 8 (efull 3 8 "bd cp" "bass"))
  # n (slow 12 (scale 0 10 $ sine1))
  # gain 1

    hush

--Sequence parser
Now you can give * and / subpatterns in the parser.
For example "[a b]*[2 3]" would be the same as "[a b] [b a b]"
(i.e. the first half of "|a b|a b",
which is the pattern at twice the speed,
and the second half of "a b a |b a b|",
which is the pattern at three times the speed).

d2 $ sound "[[bd sn]*[2 3],cp ~]"

d2 $ slow 1.25$ sound "[[bd [sn:2 ~ sn:3]*[4 3] cp:2]*[3 [1 2] 1],cp]"

hush


d2 $ sound "[[bd sn][sn bd sn],cp ~]"

would be the same as

d2 $ sound "[bd sn] [sn bd sn]"

d2 $ sound "[[bd sn]/[2 3],[bd cp]*[2 3]]"

hush

  -- "x ~ ~ x ~ ~ x ~"

----------distrib-----------
d1
  $ distrib [(round <$> (slow 18 $ segment 18 $ range 1 3 $ sine)),(round <$> (slow 5 $ segment 16 $ range 5 8 $ sine)),17]
  $ sound "[bd]*4"
  -- # gain (efull 3 16 "1" "2")
  -- # nudge (range 0 2 $ slow 16 $ sine)
  -- # orbit 1
  -- # release 1
  -- # begin (slow 10 (range 0.1 0.99 $ sine))
  -- # cut 1

d2
    $ distrib [(round <$> (slow 18 $ segment 18 $ range 1 4 $ saw)),(round <$> (slow 10 $ segment 16 $ range 5 20 $ sine)),17]
    $ sound "[sn]*2"

:t distrib


New Bjorklund (aka Euclidean) functions

New function einv, which fills the “blanks” left by e.
For example, e 3 8 "x" gives "x ~ ~ x ~ ~ x ~", whereas einv 3 8 "x" gives "~ x x ~ x x ~ x".

Another new function efull which takes two patterns rather than one,
combining e n k on the first with einv n k on the second.
For example, efull 3 8 "2" "1" gives "2 1 1 2 1 1 2 1"

Yet another function distrib,
--which is similar to e, but takes a list of numbers.
distrib [5,8] "x" is the same as e 5 8 "x"
but distrib [2,5,8] will  do something rather freaky..
It will take the (5,8) pattern as a starting point (which is "x ~ x x ~ x x ~")
and then attempt to distribute two events evenly over those five xs as though they were contiguous
, creating "x ~ ~ x ~ ~ ~ ~").
Basically, give it a list of numbers which increase in value and you’ll find some
interesting off-kilter rhythms.

d1 $ distrib [5,7,16] $ sound "bd:7"

hush
