cps 0.8

d2
  $ sometimes ((swingBy (3/2) 12).(degradeBy 0))
  $ s (iter 8 (efull 3 8 "bd cp" "bass"))
  # n (slow 12 (scale 0 10 $ sine1))
  # gain 1

    hush

--Sequence parser
Now you can give * and / subpatterns in the parser.
For example "[a b]*[2 3]" would be the same as "[a b] [b a b]"
(i.e. the first half of "a b a b",
which is the pattern at twice the speed,
and the second half of "a b a b b a b",
which is the pattern at three times the speed).

d2 $ sound "[[bd sn]*[2 3]]"

would be the same as

d2 $ sound "[bd sn] [sn bd sn]"


d2 $ sound "[[bd sn]/[2 3],[bd cp]*[2 3]]"


bps 138

d2
   $ slow 1
   -- $ brak
   $ sound "[[yes*5 [bd*4 yes] sn yes ](3,8,2) *[1.5 [1.25 [5]] 2 3.3]*2]"
   -- # n (segment 30 $ range 1 10 $ saw )
   |+ n (slow 136 $ run 136)
   -- # speed (segment 40 $ range 1.1 (-0.1) $ saw )
   # cut 1
   # release (slow 4 $ segment 40 $ range 0.3 6 $ saw )

   hush



hush

d3 silence

  -- "x ~ ~ x ~ ~ x ~"

d1
  $ distrib [3,5,17]
  $ sound "[sn bd]*10"
  -- # gain (efull 3 16 "1" "2")
  -- # nudge (range 0 2 $ slow 16 $ sine)
  -- # orbit 1
  -- # release 1
  -- # begin (slow 10 (range 0.1 0.99 $ sine))
  -- # cut 1
